if(x > 2){
print(x)
} else {
print("The value of 'x' is smaller or equal to 2")
}
}
check <- function(x){
if(x > 2){
print(x)
} else {
print("The value of 'x' is smaller or equal to 2")
}
}
check(x = 3)
check(x = -45)
check(3)
check(-45)
pnorm(1.64 - (1/(1/sqrt(625))))
1-pnorm(1.64 - (1/(1/sqrt(625))))
1-pnorm(1.64 - (1/(10/sqrt(625))))
1-pnorm(1.64 - (sqrt(625)/10)  )
1- (1-pnorm(1.64 - (sqrt(625)/10)))
1 – (1-pnorm(1.64 – 7*(sqrt(625)/10)))
1 - (1-pnorm(1.64 – 7*(sqrt(625)/10)))
1-pnorm(1.64 - 7*(sqrt(625)/10)  )
1-(1-pnorm(1.64 - 7*(sqrt(625)/10)  ))
1-64 - (sqrt(625)/10))
1-64 - (sqrt(625)/10)
10/sqrt(625)
sqrt(625)
sqrt(625)/10
1.64 - (sqrt(625)/10)
1- (1-pnorm(-0.86))
1.64 - (7/0.4)
1- 0.1948945
1 - pnorm(1.64)
2*3.72*10/1.75
42.5^2
library(tidyverse)
library(gapminder)
spur <- function(y){
new_gap <- gapminder %>% filter(year = y)
ggplot(new_gap, aes(x = gdpPercap, y = lifeExp) + geom_point()
}
new_gap <- gapminder %>% filter(year = y)
spur <- function(y){
new_gap <- gapminder %>% filter(year = y)
ggplot(new_gap, aes(x = gdpPercap, y = lifeExp)) + geom_point()
}
spur(1952)
spur <- function(y){
new_gap <- gapminder %>% filter(year == y)
ggplot(new_gap, aes(x = gdpPercap, y = lifeExp)) + geom_point()
}
spur(1952)
spur(2007)
spur(1953)
gapminder$year
unique(gapminder$year)
spur_robust <- function(y){
if(y %in% unique(gapminder$year)){
new_gap <- gapminder %>% filter(year == y)
return(ggplot(new_gap, aes(x = gdpPercap, y = lifeExp)) + geom_point())
}else{
print("Only years:")
print(unique(gapminder$year))
print("are features in the gapminder data set.")
}
}
spur_robust(2002)
spur_robust(1953)
gap_filt <- gapminder %>% filter(year == 2002)
ggplot(gap_filt, aes(x = continent)) +
geom_bar()
ggplot(gap_filt, aes(x = gdpPercap)) +
geom_bar()
ggplot(gap_filt, aes(x = gdpPercap)) +
geom_bar(stat = "bin")
ggplot(gap_filt, aes(x = gdpPercap)) +
geom_histogram()
ggplot(gap_filt, aes(x = gdpPercap)) +
geom_density()
x <- 1:7
length(x)
x <- 4:59
x
length(x)
gapminder
gapminder$gdpPercap
gapminder %>% pull(gdpPercap)
pull(gapminder, gdpPercap)
gdp <- gapminder$gdpPercap
gdp <- gapminder %>% pull(gdpPercap)
gdp <- pull(gapminder, gdpPercap)
gdp
gapminder
gapminder %>% nrow()
gapminder %>%
summarize(nrows = n())
gapminder %>%
group_by(continent) %>%
summarize(nrows = n())
gapminder %>%
group_by(continent) %>%
tally()
samp <- sample(1:100, 1000, replace = T)
samp
samp_df <- tibble(draws = samp)
samp_df
samp
ggplot(samp_df, aes(x = draws)) + geom_bar()
samp
samp_2 <- (2 + sample(1:100/100, 1000, replace = T))*samp
samp_2
corr_df <- tibble(draws = samp,
corr_draws <- samp_2)
corr_df
ggplot(corr_df, aes(x = draws, y = corr_draws)) + geom_point()
corr_df <- tibble(draws = samp,
corr_draws = samp_2)
corr_df <- tibble(draws = samp,
corr_draws = samp_2)
corr_df
ggplot(corr_df, aes(x = draws, y = corr_draws)) + geom_point()
gapminder$continent
gapminder$continent %>% unique()
unique(gapminder$continent)
x <- 1
x <- 1
for(1:5){
for(i in 1:5){
z <- sample(1:10, 1)
x <- x + z
}
x
x <- 1
print("Initial value of x")
print(x)
print("Initial value of x")
print(x)
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value to be added in this round")
print(z)
x <- x + z
print("New value of x after this round")
print(x)
}
y <- c()
y
y <- c()
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value to be appended in this round")
print(z)
y <- c(y,z)
print("New vector y after this round")
print(x)
}
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value to be appended in this round")
print(z)
y <- c(y,z)
print("New vector y after this round")
print(y)
}
y <- c()
y
```{r}
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value to be appended in this round")
print(z)
y <- c(y,z)
print("New vector y after this round")
print(y)
}
y <- rep(NA, 5)
y
y
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value to be appended in this round")
print(z)
y[i] <- z
print("New vector y after this round")
print(y)
}
spur <- function(y){
gap_filt <- gapminder %>% filter(year == y)
ggplot(gap_filt, aes(x = gdpPercap, y = lifeExp)) + geom_point()
}
spur(1952)
spur(2002)
spur(1954)
spur <- function(y){
if(y %in% gapminder$year){
gap_filt <- gapminder %>% filter(year == y)
return(ggplot(gap_filt, aes(x = gdpPercap, y = lifeExp)) + geom_point())
} else{
print("Error: only years")
print(gapminder$year %>% unique())
print("are available in the gapminder data set.")
}
}
spur(1956)
spur(1958)
spur(1962)
spur(1954)
gap_filt <- gapminder %>% filter(year == 2002)
ggplot(gap_filt, aes(x= continent)) + geom_bar()
ggplot(gap_filt, aes(x= gdpPercap)) + geom_bar()
ggplot(gap_filt, aes(x= gdpPercap)) + geom_bar(stat = 'bin')
ggplot(gap_filt, aes(x= gdpPercap)) + geom_histogram()
ggplot(gap_filt, aes(x= gdpPercap)) + geom_density()
ggplot(gap_filt, aes(x= gdpPercap)) + geom_histogram()
x <- 1:7
x
length(x)
x <- 1:13
length(x)
x <- 48:59
x
length(x)
gap_filt$country
gap_filt %>% pull(country)
pull(gap_filt, country)
ct <- gap_filt$country
ct <- gap_filt %>% pull(country)
ct <- pull(gap_filt, country)
ct
ct
gapminder
gapminder %>% nrow()
gapminder %>%
summarize(nrows = n())
gapminder %>%
group_by(continent) %>%
summarize(nrows = n())
gapminder %>%
group_by(continent) %>%
tally()
samp <- sample(1:100, 1000, replace = T)
samp
samp_df <- tibble(draws = samp)
samp_df
samp
ggplot(samp_df, aes(x = draws)) + geom_bar()
samp_2 <- (2 + sample(1:100/100, 1000, replace = T))*samp
samp
samp_2
corr_df <- tibble(draws = samp,
corr_draws = samp_2)
corr_df
ggplot(corr_df, aes(x=draws, y = corr_draws)) + geom_point()
gapminder$year
gapminder$year %>% unique()
unique(gapminder$year)
x <- 1
x <- 1
x
for(i in 1:5){
z <- sample(1:10, 1)
x <- x + z
}
x
x <- 1
x <- 1
x <- 1
x <- 1
x <- 1
for(i in 1:5){
z <- sample(1:10, 1)
x <- x + z
}
x
x <- 1
x <- 1
x <- 1
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value of z for this round")
print(z)
x <- x + z
print("Updated value of x after this round")
print(x)
}
y <- c()
y
y <- c()
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value of z for this round")
print(z)
y <- c(y,z)
print("Updated value z after this round")
print(y)
}
y <- c()
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value of z for this round")
print(z)
y <- c(y,z)
print("Updated value y after this round")
print(y)
}
y <- rep(NA, 5)
y
y <- rep(NA, 5)
y
for(i in 1:5){
print("Round")
print(i)
z <- sample(1:10, 1)
print("Value of z for this round")
print(z)
y[i] <- z
print("Updated value y after this round")
print(y)
}
ncol(mtcars)
length(mtcars)
library(tidyverse)
? dplyr
help(dplyr)
x <- 5:8
names(x) <- letters[5:8]
x
x <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
upper.tri(x)
x[upper.tri(x)]
as.POSIXct("Sep-28-2019")
as.POSIXct("Sep-28-2019 07:54:31 AM")
as.POSIXct("Sep-28-2019 07:54:31 AM", format = '%b-%d-%Y')
as.POSIXct("Sep-28-2019 07:54:31 AM UTC", format = '%b-%d-%Y')
a <- c(3,0, TRUE)
b <- c(4,0, FALSE)
a|b
(a|b)
as.Date("2018-10-01")
x <- as.Date("2018-10-01")
as.month(x)
months)x
months(x)
month(x)
indat <- c("Ash Rd", "Ash Cir", "Ash St")
grepl("[Rd|Ave|Dr|St]", indat)
grepl("Rd,Ave,Dr,St", indat)
grepl("Rd|Ave|Dr|St", indat)
a <- list("10", TRUE)
a[1]
is.list(a[1])
x <- c(12L, 6L)
median(x)
median(x) %>% typeof()
mtcars
mtcars$mpg >= 30
index(mtcars$mpg >= 30 )
c2 <- data.frame(c(1,2,3))
c2
cbind(c2, c(1,2,3))
"dbinom(10,size=20,prob=0.5)"
dbinom(10,size=20,prob=0.5)
library(tidyverse)
txhousing
library(tidyverse)
library(rjson)
library(jsonlite)
source(jurigroups)
all_files <- list.files('wcpd_usd')
df <- read_csv(paste0('./wcpd_usd/',all_files[1]))
df
df <- read_csv(paste0('./wcpd_usd/',all_files[1]))
setwd("~/Documents/Github_repos/rff_carbon/rff_carbon_price_sectoral/data")
df <- read_csv(paste0('./wcpd_usd/',all_files[1]))
all_files <- list.files('wcpd_usd')
df <- read_csv(paste0('./wcpd_usd/',all_files[1]))
df
library(tidyverse)
library(rjson)
library(jsonlite)
source(jurigroups)
all_files <- list.files('wcpd_usd')
df <- read_csv(paste0('./wcpd_usd/',all_files[1]))
for (file in  all_files[2:length(all_files)]){
df <- df %>% rbind(read_csv(paste0('./wcpd_usd/',file)))
}
# write(toJSON(df), "merged.json")
df2 <- df %>% select(jurisdiction, year, ipcc_code, Product, tax_rate_incl_ex_clcu_2019USD, ets_price_2019USD)
df2 <- df2 %>%
mutate(jurtype = case_when(
jurisdiction %in% subnat_chn ~ "Chinese province",
jurisdiction %in% subnat_can ~ "Canadian province",
jurisdiction %in% subnat_usa ~ "United States state",
jurisdiction %in% subnat_jpn ~ "Japanese province",
jurisdiction %in% subnat_mex ~ "Mexican state",
TRUE ~ "country"
))
for(y in df$year %>% unique()){
df_year <- df %>% filter(year == y)
write_csv(df_year, paste0(y, ".csv"))
}
df2 %>%
group_by(jurisdiction) %>%
filter(year == min(year) & ipcc_code == min(ipcc_code)) %>%
select(jurisdiction, jurtype) %>%
write.csv('jurisdictions.csv')
library(tidyverse)
library(rjson)
library(jsonlite)
source('jurigroups.R')
all_files <- list.files('wcpd_usd')
df <- read_csv(paste0('./wcpd_usd/',all_files[1]))
for (file in  all_files[2:length(all_files)]){
df <- df %>% rbind(read_csv(paste0('./wcpd_usd/',file)))
}
df
df2 <- df %>% select(jurisdiction, year, ipcc_code, Product, tax_rate_incl_ex_kusd, ets_price_kusd)
df2
df2 <- df %>%
select(jurisdiction, year, ipcc_code, Product, tax_rate_incl_ex_kusd, ets_price_kusd) %>%
filter(!is.na(Product) & !(is.na(tax_rate_incl_ex_kusd) & is.na(ets_price_kusd)))
df2
df2 <- df2 %>%
mutate(jurtype = case_when(
jurisdiction %in% subnat_chn ~ "subnat_chn",
jurisdiction %in% subnat_can ~ "subnat_can",
jurisdiction %in% subnat_usa ~ "subnat_usa",
jurisdiction %in% subnat_jpn ~ "subnat_jpn",
jurisdiction %in% subnat_mex ~ "subnat_mex",
TRUE ~ "country"
))
for(y in df$year %>% unique()){
df_year <- df2 %>% filter(year == y)
write_csv(df_year, paste0(y, ".csv"))
}
df2 %>%
group_by(jurisdiction) %>%
filter(year == min(year) & ipcc_code == min(ipcc_code)) %>%
select(jurisdiction, jurtype) %>%
write.csv('jurisdictions.csv')
df2
df2 %>%
group_by(jurisdiction) %>%
filter(year == min(year) & ipcc_code == min(ipcc_code)) %>%
select(jurisdiction, jurtype) %>%
ungroup() %>%
distinct(jurisdiction, jurtype) %>%
write.csv('jurisdictions.csv')
df2 %>% filter(year == 2020 & ipcc_code == '1A1A1')
df2 %>% filter(year == 2020 & ipcc_code == '1A1A1' & !is.na(ets_price_kusd))
df2 %>% filter(year == 2020 & ipcc_code == '1A1A1' & !is.na(ets_price_kusd)) %>% pull(jurisdiction) %>% unique() %>% length()
df2 %>% filter(year == 2020 & ipcc_code == '1A1A1' & !is.na(ets_price_kusd)) %>% pull(jurisdiction) %>% unique()
df2
df2 %>% filter(jurisdiction == 'Finland')
df2 %>% filter(jurisdiction == 'Finland' & year == 2020)
df %>%
select(jurisdiction, year, ipcc_code, Product, tax_rate_incl_ex_kusd, ets_price_kusd)
df2
df2
df2 %>%
select(jurisdiction, jurtype) %>%
distinct(jurisdiction, jurtype) %>%
write.csv('jurisdictions.csv')
df2 %>%
select(jurisdiction, jurtype) %>%
distinct(jurisdiction, jurtype) %>%
write.csv('jurisdictions.csv')
df2 %>% filter(ipcc_code == '2B1')
df2
df2 %>% View()
df %>% filter(sector == '2B1')
df %>% filter(ipcc_code == '2B1')
df2
df2 <- df %>%
select(jurisdiction, year, ipcc_code, Product, tax_rate_incl_ex_kusd, ets_price_kusd) %>%
filter( !( is.na(tax_rate_incl_ex_kusd) & is.na(ets_price_kusd)) )
df2 <- df2 %>%
mutate(jurtype = case_when(
jurisdiction %in% subnat_chn ~ "subnat_chn",
jurisdiction %in% subnat_can ~ "subnat_can",
jurisdiction %in% subnat_usa ~ "subnat_usa",
jurisdiction %in% subnat_jpn ~ "subnat_jpn",
jurisdiction %in% subnat_mex ~ "subnat_mex",
TRUE ~ "country"
))
for(y in df$year %>% unique()){
df_year <- df2 %>% filter(year == y)
write_csv(df_year, paste0(y, ".csv"))
}
df2 %>%
select(jurisdiction, jurtype) %>%
distinct(jurisdiction, jurtype) %>%
write.csv('jurisdictions.csv')
